You are given a read-only array of N integers with values also in the range [1, N] both inclusive. Each integer appears exactly once except A which appears twice and B which is missing. The task is to find the repeating and missing numbers A and B where A repeats twice and B is missing.

Example 1:
Input Format:  array[] = {3,1,2,5,3}
Result: {3,4)
Explanation: A = 3 , B = 4 
Since 3 is appearing twice and 4 is missing

Example 2:
Input Format: array[] = {3,1,2,5,4,6,7,5}
Result: {5,8)
Explanation: A = 5 , B = 8 
Since 5 is appearing twice and 8 is missing


def missingAndRepeating(arr, n):
    hash_set = dict.fromkeys(range(1,n+1),0)
    repeating =-1
    missing=-1
    for each in arr:
        hash_set[each]+=1
    # print(hash_set)
    for i in range(1,n+1):
        if hash_set[i]==2:
            repeating=i
        if hash_set[i]==0:
            missing=i
    return [missing,repeating]

Time complexity - O(2n)
Space complexity -O(n)